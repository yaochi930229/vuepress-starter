(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{365:function(r,t,l){"use strict";l.r(t);var e=l(45),n=Object(e.a)({},(function(){var r=this,t=r.$createElement,l=r._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[l("h1",{attrs:{id:"crlf-lf-cr-都是什么意思"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#crlf-lf-cr-都是什么意思"}},[r._v("#")]),r._v(" CRLF LF CR 都是什么意思")]),r._v(" "),l("p",[r._v("=========================")]),r._v(" "),l("ul",[l("li",[r._v("CRLF: 是 carriagereturenlinefeed 的缩写,中文意思是回车换行")]),r._v(" "),l("li",[r._v("LF: 是 line feed 的缩写,中文意思是换行")]),r._v(" "),l("li",[r._v("CR: 是 carriagereturn 的缩写，中文意思是回车")])]),r._v(" "),l("p",[r._v("换行回车引出的问题关键在于操作系统之间的分歧\n早期的mac系统使用CR当做换行，现在也已经统一成了LF\nUnix（包含现在大量使用的linux）系统使用LF\nwindows系统使用LFCR当做换行")]),r._v(" "),l("p",[l("strong",[r._v("跨平台合作时候的解决方式：")]),l("br"),r._v("\n当我们使用git库提交代码的时候，不同的开发环境如果都是按照自己系统的方式任意修改换行类型，难免会让代码库整体混乱或者产生许多没有必要的代码更新")]),r._v(" "),l("p",[l("em",[l("strong",[r._v("使用core.autocrlf命令解决该问题")])])]),r._v(" "),l("p",[r._v("git 为了防止以上问题扰乱跨平台合作开发，使用命令可以转化 LF 和 CRLF")]),r._v(" "),l("ul",[l("li",[l("p",[r._v("git config --global core.autocrlf true"),l("br"),r._v("\nGit 可以在你 push 时自动的把行结束符CRLF转换成LF，而在pull代码时把LF转换成CRLF.用 core.autocrlf 来打开此项功能，如果是在windows系统上，把设置成true，这样当迁出代码时，LF 会被转换成 CRLF")])]),r._v(" "),l("li",[l("p",[r._v("git config --global core.autocrlf input"),l("br"),r._v("\nLinux或Mac系统使用LF作为行结束符；当一个以CRLF为行结束符的文件不小心被引入时你肯定想进行修正，把core.autocrlf设置成input来告诉 Git 在push时把CRLF转换成LF，pull时不转换")])]),r._v(" "),l("li",[l("p",[r._v("git config --global core.autocrlf false"),l("br"),r._v("\n在本地和代码库中都保留CRLF，无论pull还是push都不变，代码库什么样，本地还是什么样子")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);